image: docker:stable

stages:
  - build
  - run containers
  - test
#  - clean containers
  - push


variables:
  IMAGE: "fake-backend-gitlab"

build:
  stage: build
  before_script:
    - docker rm -vf dbgame battlegame || echo "delete existing containers"
    - docker volume rm -f  mysql_data || echo "delete existing volume"
    - docker network rm  game || echo "delete existing network"
  script:
    - docker build -t $IMAGE ./fake-backend
  

run:
  stage: run containers   
  script:
#    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
 #   - pip install docker-compose
    - docker-compose up -d

test:
  stage: test

  before_script:
    - apk add --update curl python && rm -rf /var/cahe/apk/* 

  script:
    - echo "TEST THE JOB"
    - if [ "$(curl -X GET http://127.0.0.1:80/health)" = "ok" ] ; then echo "test OK";exit 0;  else echo "test KO" ;exit 1; fi

#clean:
#  stage: clean containers
#  script:
#    - docker rm -vf battlegame dbgame
#    - docker volume rm -f  mysql_data
#    - docker network rm  -f network_game


push:
  stage: push
  script: 
    - docker login -u $USERNAME -p $PASSWORD
    - docker tag $IMAGE $USERNAME/$IMAGE:gitlab_ci
    - docker push  $USERNAME/$IMAGE:gitlab_ci

  only:
    - master
   



